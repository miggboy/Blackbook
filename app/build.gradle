/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */
import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

def os = DefaultNativePlatform.currentOperatingSystem;

java {
    targetCompatibility = JavaVersion.VERSION_17
    sourceCompatibility = JavaVersion.VERSION_17
}

javafx {
    version = '17' // Specify javafx sdk version
    modules = ['javafx.fxml', 'javafx.controls', 'javafx.base', 'javafx.graphics', 'javafx.media', 'javafx.swing', 'javafx.web']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    implementation 'com.gluonhq:maps:2.0.0-ea+6'
}

application {
    // Define the main class for the application.
    mainClass = 'blackbook.frontend.Launcher'
}

shadowJar {
    dependencies {
        exclude(dependency('org.junit.jupiter:junit-jupiter:5.9.1'))
    }
   
   if (os.isWindows()) {
    archiveBaseName.set('Blackbook-win')
   }
   if (os.isMacOsX()) {
    archiveBaseName.set('Blackbook-osx')
   }
   if (os.isLinux()) {
    archiveBaseName.set('Blackbook-linux')
   }
   
   archiveClassifier.set('')
   archiveVersion.set('')
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
